!function(e){"use strict";e.extend(e.fn.bootstrapTable.defaults,{reorderableColumns:!1,maxMovingRows:10,onReorderColumn:function(){return!1},dragaccept:null}),e.extend(e.fn.bootstrapTable.Constructor.EVENTS,{"reorder-column.bs.table":"onReorderColumn"});var o=e.fn.bootstrapTable.Constructor,t=o.prototype.initHeader,r=o.prototype.toggleColumn,s=o.prototype.toggleView,a=o.prototype.resetView;o.prototype.initHeader=function(){t.apply(this,Array.prototype.slice.apply(arguments)),this.options.reorderableColumns&&this.makeRowsReorderable()},o.prototype.toggleColumn=function(){r.apply(this,Array.prototype.slice.apply(arguments)),this.options.reorderableColumns&&this.makeRowsReorderable()},o.prototype.toggleView=function(){s.apply(this,Array.prototype.slice.apply(arguments)),this.options.reorderableColumns&&(this.options.cardView||this.makeRowsReorderable())},o.prototype.resetView=function(){a.apply(this,Array.prototype.slice.apply(arguments)),this.options.reorderableColumns&&this.makeRowsReorderable()},o.prototype.makeRowsReorderable=function(){var o=this;try{e(this.$el).dragtable("destroy")}catch(t){}e(this.$el).dragtable({maxMovingRows:o.options.maxMovingRows,dragaccept:o.options.dragaccept,clickDelay:200,beforeStop:function(){var t=[],r=[],s=[],a=[],n=-1;if(o.$header.find("th").each(function(){t.push(e(this).data("field")),r.push(e(this).data("formatter"))}),t.length<o.columns.length){a=e.grep(o.columns,function(e){return!e.visible});for(var l=0;l<a.length;l++)t.push(a[l].field),r.push(a[l].formatter)}for(var l=0;l<t.length;l++)n=e.fn.bootstrapTable.utils.getFieldIndex(o.columns,t[l]),-1!==n&&(s.push(o.columns[n]),o.columns.splice(n,1));o.columns=o.columns.concat(s),o.header.fields=t,o.header.formatters=r,o.resetView(),o.trigger("reorder-column",t)}})}}(jQuery);